/**
 * @file day.h
 * @brief 天气数据结构类的头文件
 * @author Weather Forecast Team
 * @date 2025
 * 
 * 该文件定义了Day类，用于存储单日的完整天气信息。
 * 包含日期、温度、天气类型、空气质量等多维度的天气数据。
 * 该类作为天气数据的基本存储单元，在整个天气预报应用中广泛使用。
 */

#ifndef DAY_H
#define DAY_H

#include <QString>      // Qt字符串类，用于存储文本数据

/**
 * @class Day
 * @brief 天气数据结构类
 * 
 * 该类封装了单日完整的天气信息，包括基本的日期时间信息、
 * 温度数据、天气状况、空气质量指标等。
 * 
 * 主要用途：
 * - 存储从天气API获取的单日天气数据
 * - 在UI界面中展示天气信息
 * - 作为天气数据传递和处理的基本单元
 * - 支持多日天气预报的数据组织
 */
class Day
{
public:
    /**
     * @brief 默认构造函数
     * 
     * 创建Day实例，所有字符串成员变量将被初始化为空字符串。
     */
    Day();
    
    // ========== 日期时间信息 ==========
    /**
     * @brief 日期信息
     * 
     * 存储天气数据对应的日期，通常格式为"YYYY-MM-DD"或"MM月DD日"。
     */
    QString mDate;
    
    /**
     * @brief 星期信息
     * 
     * 存储对应日期的星期几，如"星期一"、"周二"等。
     */
    QString mWeek;
    
    /**
     * @brief 城市名称
     * 
     * 存储天气数据对应的城市名称，如"北京"、"上海"等。
     */
    QString mCity;
    
    // ========== 温度信息 ==========
    /**
     * @brief 当前温度
     * 
     * 存储当前时刻的气温，通常包含温度数值和单位，如"22°C"。
     */
    QString mTemp;
    
    /**
     * @brief 最低温度
     * 
     * 存储当日的最低气温，通常包含温度数值和单位，如"15°C"。
     */
    QString mTempLow;
    
    /**
     * @brief 最高温度
     * 
     * 存储当日的最高气温，通常包含温度数值和单位，如"25°C"。
     */
    QString mTempHigh;
    
    // ========== 天气状况 ==========
    /**
     * @brief 天气类型
     * 
     * 存储天气状况描述，如"晴"、"多云"、"小雨"、"雪"等。
     * 该字段用于确定显示的天气图标和背景样式。
     */
    QString mWeathType;
    
    /**
     * @brief 生活提示
     * 
     * 存储基于当日天气状况的生活建议，如穿衣指数、出行提醒等。
     */
    QString mTips;
    
    // ========== 风力信息 ==========
    /**
     * @brief 风向
     * 
     * 存储风向信息，如"东北风"、"西南风"、"无持续风向"等。
     */
    QString mFx;
    
    /**
     * @brief 风力等级
     * 
     * 存储风力强度信息，如"3-4级"、"微风"等。
     */
    QString mFl;
    
    // ========== 空气质量信息 ==========
    /**
     * @brief PM2.5指数
     * 
     * 存储PM2.5浓度数值，用于评估空气中细颗粒物污染程度。
     */
    QString mPm25;
    
    /**
     * @brief 湿度
     * 
     * 存储相对湿度百分比，如"65%"。
     */
    QString mHu;
    
    /**
     * @brief 空气质量等级
     * 
     * 存储空气质量评级，如"优"、"良"、"轻度污染"等。
     */
    QString mAirq;

};

#endif // DAY_H
